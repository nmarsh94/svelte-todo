{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { onMount } from 'svelte';\n\timport { fade } from 'svelte/transition';\n  import { fly } from 'svelte/transition';\n\n  \n\tconst ENTER_KEY = 13;\n  const ESCAPE_KEY = 27;\n  let beforeEditCache = '';\n\tlet currentFilter = 'all';\n\tlet newTodo = '';\n  let tempId = 4;\n  let NOTSTARTED = 'Not Started';\n  let INPROGRESS = 'In Progress';\n  let COMPLETED = 'Completed';\n  let STATUS_LIST={NOTSTARTED,INPROGRESS,COMPLETED};\n\n\n\n  let myTodos = [];\n\n\n  async function getItems() {\n    const response = await fetch(\"http://localhost:5000/items/all\")\n\n    const todo = await response.json();\n\n    myTodos = todo.items\n    console.log(myTodos)\n  }\n\n\n  let todos = [];\n  let input = \"\";\n\n  \n  async function addItem() {\n    let data = { item : input }\n    const res = await fetch(\"http://localhost:5000/item/new\", {\n      method: 'POST',\n      headers: { 'Content-Type' : 'application/json;charset=utf-8' },\n      body: JSON.stringify(data)\n    })\n\n    const json = await res.json()\n    let result = JSON.stringify(json)\n    console.log(result);\n\n    getItems();\n  }\n\n  function addTodo() {\n    if (input)\n      addItem()\n    input = \"\";\n\n    if (event.key === 'Enter') {\n\t\t\ttodos.push({\n\t\t\t\tid: tempId,\n\t\t\t\tcompleted: false,\n\t\t\t\ttitle: newTodo,\n\t\t\t\tediting: false\n\t\t\t})\n\t\t\ttodos = todos;\n\t\t\ttempId = tempId + 1;\n\t\t\tnewTodo = '';\n\t\t}\n  }\n\n  function editTodo(todo) {\n    beforeEditCache = todo.title;\n\t\ttodo.editing = true;\n\t\ttodos = todos;\n\t}\n\tfunction doneEdit(todo) {\n\t\tif (todo.title.trim() === '') {\n      todo.title = beforeEditCache\n    }\n    todo.editing = false;\n    todos = todos;\n\t}\n\tfunction doneEditKeydown(todo, event) {\n\t\tif (event.key === 'Enter') {\n      doneEdit(todo);\n    }\n    if (event.key === 'Escape') {\n      todo.title = beforeEditCache;\n      todo.editing = false;\n      todos = todos;\n    }\n\t}\n\n  function clearCompleted() {\n\t\ttodos = todos.filter(todo => !todo.completed);\n\t}\n\tfunction checkAllTodos(event) {\n\t\ttodos.forEach(todo => todo.completed = event.target.checked);\n\t\ttodos = todos;\n\t}\n\tfunction updateFilter(filter) {\n\t\tcurrentFilter = filter;\n\t}\n\n  \n\n  async function removeTodo(id) {\n    let data = { itemid : id }\n    const res = await fetch(\"http://localhost:5000/item/remove\", {\n      method: 'DELETE',\n      headers: { 'Content-Type' : 'application/json;charset=utf-8' },\n      body: JSON.stringify(data)\n    })\n\n    todos = todos.filter(todo => todo.id !== id);\n    getItems();\n  }     \n\n\n  onMount(async()=>{\n    getItems();\n    const res = await fetch('https://api.kanye.rest');\n\t\tconst response = await res.json();\n\t\tconsole.log(response.quote);\n  });\n\n\t$: todosRemaining = filteredTodos.filter(todo => !todo.completed).length;\n\t$: filteredTodos = currentFilter === 'all'\n\t\t? todos\n\t\t: currentFilter === 'completed'\n\t\t\t? todos.filter(todo => todo.completed)\n\t\t\t: todos.filter(todo => !todo.completed);\n\n\n\n\n</script>\n\n\n\n\n\n\n<style lang=\"scss\">.container {\n  max-width: 600px;\n  margin: 0 auto; }\n\n.logo {\n  display: block;\n  margin: 20px auto;\n  height: 75px; }\n\n.todo-input {\n  width: 100%;\n  padding: 10px 18px;\n  font-size: 18px;\n  margin-bottom: 16px; }\n\n.todo-item {\n  margin-bottom: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  animation-duration: 0.3s; }\n\n.remove-item {\n  cursor: pointer;\n  margin-left: 14px; }\n  .remove-item:hover {\n    color: black; }\n\n.todo-item-left {\n  display: flex;\n  align-items: center; }\n\n.todo-item-label {\n  padding: 10px;\n  border: 1px solid white;\n  margin-left: 12px; }\n\n.todo-item-edit {\n  font-size: 24px;\n  color: #2c3e50;\n  margin-left: 12px;\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  font-family: 'Avenir', Helvetica, Arial, sans-serif; }\n  .todo-item-edit:focus {\n    outline: none; }\n\n.completed {\n  text-decoration: line-through;\n  color: grey; }\n\n.extra-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 16px;\n  border-top: 1px solid lightgrey;\n  padding-top: 14px;\n  margin-bottom: 14px; }\n  .extra-container input {\n    margin-right: 8px; }\n\nbutton {\n  font-size: 14px;\n  background-color: white;\n  appearance: none; }\n  button:hover {\n    background: salmon; }\n  button:focus {\n    outline: none; }\n\n.active {\n  background: salmon; }\n</style>\n\n<div class=\"container\">\n  <img src={'/img/favicon.png'} alt=\"svelte logo\" class=\"logo\">\n\n  <input type=\"text\" class=\"todo-input\" placeholder=\"What needs to be done\" bind:value={newTodo} on:keydown={addTodo}>\n\n  {#each filteredTodos as todo}\n\t\t<div class=\"todo-item\">\n\t\t\t<div class=\"todo-item-left\" transition:fly=\"{{ y: 20, duration: 300 }}\">\n\t\t\t\t<input type=\"checkbox\" bind:checked={todo.completed}>\n\t\t\t\t{#if !todo.editing}\n\t\t\t\t\t<div class=\"todo-item-label\" class:completed={todo.completed} on:dblclick={() => editTodo(todo)}>{todo.title}</div>\n\t\t\t\t{:else}\n\t\t\t\t\t<input class=\"todo-item-edit\" bind:value={todo.title} type=\"text\" on:blur={() => doneEdit(todo)} on:keydown={() => doneEditKeydown(todo, event)} autofocus>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t\t<div class=\"remove-item\" on:click={() => deleteTodo(todo.id)}>\n\t\t\t\t&times;\n\t\t\t</div>\n\t\t</div>\n\t{/each}\n\n\n\n  <div class=\"extra-container\">\n    <div><label><input type=\"checkbox\" on:change={checkAllTodos}>Check All</label></div>\n    <div>{todosRemaining} items left</div>\n  </div>\n\n  <div class=\"extra-container\">\n    <div>\n      <button on:click={() => updateFilter('all')} class:active=\"{currentFilter === 'all'}\">All</button>\n      <button on:click={() => updateFilter('active')} class:active=\"{currentFilter === 'active'}\">Active</button>\n      <button on:click={() => updateFilter('completed')} class:active=\"{currentFilter === 'completed'}\">Completed</button>\n    </div>\n\n    <div>\n      <button on:click={clearCompleted}>Clear Completed</button>\n    </div>\n  </div>\n</div>"
  ],
  "names": [],
  "mappings": "AA8ImB,UAAU,4BAAC,CAAC,AAC7B,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAAE,CAAC,AAEnB,KAAK,4BAAC,CAAC,AACL,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,MAAM,CAAE,IAAI,AAAE,CAAC,AAEjB,WAAW,4BAAC,CAAC,AACX,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,IAAI,AAAE,CAAC,AAExB,UAAU,4BAAC,CAAC,AACV,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,aAAa,CAC9B,kBAAkB,CAAE,IAAI,AAAE,CAAC,AAE7B,YAAY,4BAAC,CAAC,AACZ,MAAM,CAAE,OAAO,CACf,WAAW,CAAE,IAAI,AAAE,CAAC,AACpB,wCAAY,MAAM,AAAC,CAAC,AAClB,KAAK,CAAE,KAAK,AAAE,CAAC,AAEnB,eAAe,4BAAC,CAAC,AACf,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AAAE,CAAC,AAExB,gBAAgB,4BAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,WAAW,CAAE,IAAI,AAAE,CAAC,AAEtB,eAAe,4BAAC,CAAC,AACf,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,WAAW,CAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,AAAE,CAAC,AACtD,2CAAe,MAAM,AAAC,CAAC,AACrB,OAAO,CAAE,IAAI,AAAE,CAAC,AAEpB,UAAU,4BAAC,CAAC,AACV,eAAe,CAAE,YAAY,CAC7B,KAAK,CAAE,IAAI,AAAE,CAAC,AAEhB,gBAAgB,4BAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,aAAa,CAC9B,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,SAAS,CAC/B,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,IAAI,AAAE,CAAC,AACtB,8BAAgB,CAAC,KAAK,cAAC,CAAC,AACtB,YAAY,CAAE,GAAG,AAAE,CAAC,AAExB,MAAM,4BAAC,CAAC,AACN,SAAS,CAAE,IAAI,CACf,gBAAgB,CAAE,KAAK,CACvB,UAAU,CAAE,IAAI,AAAE,CAAC,AACnB,kCAAM,MAAM,AAAC,CAAC,AACZ,UAAU,CAAE,MAAM,AAAE,CAAC,AACvB,kCAAM,MAAM,AAAC,CAAC,AACZ,OAAO,CAAE,IAAI,AAAE,CAAC,AAEpB,OAAO,4BAAC,CAAC,AACP,UAAU,CAAE,MAAM,AAAE,CAAC"
}